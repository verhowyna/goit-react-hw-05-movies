{"version":3,"file":"static/js/692.bcc6a0c5.chunk.js","mappings":"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","sources":["components/api.js","components/pages/MoviesPage/MoviesPage.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'b3c978c87bc2e93f0b47510b47e87dc4',\n  include_adult: false,\n  language: 'en-US',\n};\n\nexport async function getTrendingMovies() {\n  const response = await axios.get('/trending/movie/day');\n  return response.data;\n}\n\nexport async function searchMovies(query) {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data;\n}\n\nexport async function getDetails(movieId) {\n  const response = await axios.get(`/movie/${movieId}`);\n  return response.data;\n}\n\nexport async function getCast(movieId) {\n  const response = await axios.get(`/movie/${movieId}/credits`);\n  return response.data;\n}\n\nexport async function getReviews(movieId) {\n  const response = await axios.get(`/movie/${movieId}/reviews`);\n  return response.data;\n}\n","import { Loader } from 'components/Loader/Loader';\nimport { searchMovies } from 'components/api';\nimport { useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { NavLink, useLocation, useSearchParams } from 'react-router-dom';\n\nexport default function MoviesPage() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n\n  const [params, setParams] = useSearchParams();\n  const searchedMovie = params.get('movie') ?? '';\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      setIsLoading(true);\n      try {\n        if (!searchedMovie) {\n          return;\n        }\n        const { results } = await searchMovies(searchedMovie);\n        if (!results) {\n          return;\n        }\n        setMovies(results);\n      } catch (error) {\n        toast.error('Oops! Something went wrong. Please try again later.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovie();\n  }, [searchedMovie]);\n\n  const location = useLocation();\n\n  const onSearch = evt => {\n    evt.preventDefault();\n\n    const { value } = evt.target.elements.movie;\n    if (value) {\n      setParams({ movie: value });\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={onSearch}>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          placeholder=\"Search movie\"\n          name=\"movie\"\n        />\n        <button type=\"button\">Search</button>\n      </form>\n      {isLoading && <Loader />}\n      <div>\n        <ul>\n          {movies.length > 0 &&\n            movies.map(movie => {\n              const { id, title, poster_path } = movie;\n              const BASE_URL = 'https://image.tmdb.org/t/p/w200';\n              const photo = BASE_URL + poster_path;\n\n              return (\n                <li key={id}>\n                  <NavLink to={`${id}`} state={{ from: location }}>\n                    {poster_path ? (\n                      <img src={photo} alt={title} />\n                    ) : (\n                      <div>No Poster</div>\n                    )}\n                    <h3>{title}</h3>\n                  </NavLink>\n                </li>\n              );\n            })}\n        </ul>\n      </div>\n      {movies.length === 0 && !isLoading && searchedMovie && (\n        <div>Movie \"{searchedMovie}\" not found.</div>\n      )}\n    </>\n  );\n}\n"],"names":["getTrendingMovies","_getTrendingMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","sent","abrupt","data","stop","searchMovies","_x","_searchMovies","_callee2","query","_context2","concat","getDetails","_x2","_getDetails","_callee3","movieId","_context3","api_key","include_adult","language","MoviesPage","_params$get","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","params","setParams","searchedMovie","get","useEffect","fetchMovie","_ref","_yield$searchMovies","results","t0","toast","finish","location","useLocation","_jsxs","_Fragment","children","onSubmit","evt","preventDefault","value","target","elements","movie","_jsx","type","autoComplete","placeholder","name","Loader","length","map","id","title","poster_path","photo","NavLink","to","state","from","src","alt"],"sourceRoot":""}